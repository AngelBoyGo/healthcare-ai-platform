stages:
  - build
  - deploy

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

build:
  stage: build
  image: 
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${IMAGE_NAME}"
      --cache=true
      --cache-ttl=24h
  only:
    - main

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl create deployment healthcare-ai --image=$IMAGE_NAME --port=8000 --dry-run=client -o yaml > deployment.yaml
    - kubectl apply -f deployment.yaml
    - kubectl expose deployment healthcare-ai --port=80 --target-port=8000 --type=ClusterIP --dry-run=client -o yaml > service.yaml
    - kubectl apply -f service.yaml
    - kubectl create ingress healthcare-ai-ingress --class=nginx --rule="healthcare-ai.owlcloud.fau.edu/*=healthcare-ai:80" --dry-run=client -o yaml > ingress.yaml
    - kubectl apply -f ingress.yaml
    - echo "Healthcare AI Platform deployed at https://healthcare-ai.owlcloud.fau.edu"
  environment:
    name: production
    url: https://healthcare-ai.owlcloud.fau.edu
  only:
    - main
